@model IEnumerable<CmsShopingCart.Models.ViewModels.Shop.CategoryVM>

@{
    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

<div class="new-cat">
    <input type="text" id="newcatname" class="form-control col-sm-4" style="width : 30%; height : 50%" />
    <br />
    <br />
    <p>

        <a href="#" id="newcata" class="btn btn-info">Add new Category</a>
        <span class="ajax-text">
            <img src="~/Content/img/ajax-loader.gif" />
        </span>

    </p>


</div>

@if (!Model.Any())
{
    <h1 class="text-center"> There is no Category</h1>
}
else
{
    <table class="table js-sorting categories" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>


        </tr>

        @foreach (var item in Model)
        {
            <tr id="id_@item.Id">
                <td>
                    <div class="ajaxdivtd"></div>
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "text-box form-control", @readonly = "readonly" } })
                </td>

                <td>

                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "js-delete btn btn-danger" })
                </td>
            </tr>
        }

    </table>
}
@Html.AntiForgeryToken()

@section scripts{



    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
    <script>


        $(document).ready(function () {



            /*
             *Add new Categories
             */
            var newCatA = $("a#newcata");
            var newCatTextInput = $("#newcatname");
            var ajaxText = $("span.ajax-text");
            var table = $("table#pages tbody");

            newCatTextInput.keyup(function (e) {

                if (e.keyCode == 13) {
                    newCatA.click();
                }
            })
            newCatA.click(function (e) {
                e.preventDefault();
                var catName = newCatTextInput.val();
                if (catName.length < 2) {
                    bootbox.alert("Category name should be of 3 or more letters");
                    return false;
                }
                ajaxText.show();
                var url = "/admin/shop/AddNewCategory"
                $.post(url, { catName: catName }, function (data) {
                    var response = data.trim();
                    if (response == "titletaken") {
                        ajaxText.html("<span class='alert alert-danger'> The Title is taken </span>");
                        setTimeout(function () {
                            ajaxText.fadeOut("fast", function () {

                                ajaxText.html("<img src='~/Content/img/ajax-loader.gif'/>")

                            });
                        }, 2000);
                    } else {
                        if (!$("table#pages").length) {
                            location = reload();

                        } else {
                            ajaxText.html("<span class='alert alert-success'> The Category added succesfully </span>");
                            setTimeout(function () {
                                ajaxText.fadeOut("fast", function () {

                                    ajaxText.html("<img src='~/Content/img/ajax-loader.gif'/>")

                                });
                            }, 2000);

                            newCatTextInput.val("");
                            var toAppend = $("table#pages tbody tr:last").clone();
                            toAppend.attr("id", "id_", + data);
                            toAppend.find("#item_Name").val(catName);
                            toAppend.find("a.js-delete").attr("href", "/admin/shop/DeleteCategory/" + data);
                            table.append(toAppend);
                            table.sortable("refresh"); 
                        }
                    }


                })
            });
            /*
            *Sortable
            */
            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#pages tbody").sortable("serialize");
                    var url = "/Admin/Shop/RecordCategories";
                    $.post(url, ids, function (data) {


                    });
                }



            });

            /*
             *Bootbox confirm
             */
            $('body').on('click',"a.js-delete", function (e) {
                e.preventDefault();
                href = $(this).attr('href');
                return bootbox.confirm('Are you sure want to delete ?', function (result) {
                    if (result) {
                        window.location = href
                    }
                });
            });
            /*
             *Rename Categories
             */

            var originalTextBoxValue;
            $("table#pages input.text-box").dblclick(function () {
                originalTextBoxValue = $(this).val();
                $(this).attr("readonly", false);
            });

            $("table#pages input.text-box").keyup(function (e) {
                if (e.keyCode == 13) {
                    $(this).blur();
                }

            });
            $("table#pages input.text-box").blur(function () {
                var $this = $(this);
                var ajaxdiv = $this.parent().find(".ajaxdivtd");
                var newCatname = $this.val();
                var id = $this.parent().parent().attr("id").substring(3);
                var url = "/admin/shop/RenameCategory";
                if (newCatname.length < 2) {
                    $this.attr("readonly", true);
                    bootbox.alert("Category name should be of 3 or more letters");
                    return false;
                }
                $.post(url, { newCatName: newCatname, id: id }, function (data) {
                    var response = data.trim();
                    if (response == "titletaken") {
                        $this.val(originalTextBoxValue);
                        ajaxdiv.html("<span class='alert alert-danger'> The Category is already exists </span>").show();

                    } else {
                        ajaxdiv.html("<span class='alert alert-success'> The Category rename succesfully </span>").show();
                    }
                    setTimeout(function () {
                        ajaxdiv.fadeOut("fast", function () {
                            ajaxdiv.html("");
                        });
                    }, 2000);
                }).done(function () {
                    $this.attr("readonly", true);

                });

            });
            


        });


    </script>


}